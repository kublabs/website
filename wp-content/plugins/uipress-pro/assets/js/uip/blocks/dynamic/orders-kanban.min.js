const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;import{VueDraggableNext}from"../../../libs/VueDraggableNext.js";export function moduleData(){return{components:{"uip-order-list":orderList},props:{display:String,name:String,block:Object},data:function(){return{searchString:"",globalLoading:!1,strings:{nothingFound:__("No posts found","uipress-pro"),by:__("By","uipress-pro"),order:__("Order","uipress-pro"),status:__("Status","uipress-pro"),total:__("Total","uipress-pro"),searchOrders:__("Search by customer name or email","uipress-pro"),loadMore:__("Load more","uipress-pro")},searching:!1,states:{onHold:{page:1,totalPages:0,found:0,label:__("On hold","uipress-pro"),name:"on-hold",orders:[],color:"var(--uip-color-red-lighter)"},pendingPayment:{page:1,totalPages:0,found:0,label:__("Payment pending","uipress-pro"),name:"pending",orders:[],color:"var(--uip-color-orange-lighter)"},processing:{page:1,totalPages:0,found:0,label:__("Processing","uipress-pro"),name:"processing",orders:[],color:"var(--uip-color-green-lighter)"},completed:{page:1,totalPages:0,found:0,label:__("Completed","uipress-pro"),name:"completed",orders:[],color:"var(--uip-color-primary-lighter)"}}}},inject:["uipData","uipress","uiTemplate"],mounted:function(){this.getOrders()},watch:{searchString:{handler(e,i){if(""==e){for(let e in this.states)this.states[e].page=1;this.getOrders()}},deep:!0}},computed:{returnPerPage(){return this.block.settings.block.options.postsPerPage.value},hasSearch(){return this.uipress.get_block_option(this.block,"block","hideSearch")},returnStates(){return this.states},returnSearch(){return this.uipress.get_block_option(this.block,"block","hideSearch")}},methods:{fireFromSearch(){for(let e in this.states)this.states[e].page=1;this.getOrders()},getOrders(){let e=this;if(e.globalLoading)return;e.globalLoading=!0;let i=new FormData;i.append("action","uip_get_orders_for_kanban"),i.append("security",uip_ajax.security),i.append("states",JSON.stringify(e.returnStates)),i.append("search",e.searchString),e.uipress.callServer(uip_ajax.ajax_url,i).then(i=>{i.error&&(e.uipress.notify(i.message,"","error",!0),e.globalLoading=!1),i.success&&(e.globalLoading=!1,e.states=i.states)})},getStateOrders(e,i){let r=this;i||(e.loading=!0,e.page=parseInt(e.page)+1);let t=new FormData;t.append("action","uip_get_orders_for_kanban_by_state"),t.append("security",uip_ajax.security),t.append("state",JSON.stringify(e)),t.append("search",r.searchString),r.uipress.callServer(uip_ajax.ajax_url,t).then(i=>{i.error&&(r.uipress.notify(i.message,"","error",!0),e.loading=!1),i.success&&(e.loading=!1,e.orders=i.state.orders,e.found=i.state.found)})}},template:'\n\t\t\t<div class="uip-flex uip-flex-column uip-row-gap-s">\n        \n        \n        <div class="uip-flex uip-margin-bottom-xs" v-if="!returnSearch">\n          <div class="uip-flex uip-padding-xxs uip-border uip-search-block uip-border-round uip-min-w-300">\n              <span class="uip-icon uip-text-muted uip-margin-right-xs uip-text-l uip-icon uip-icon-medium">search</span>\n              <input class="uip-blank-input uip-flex-grow uip-text-s" type="text" :placeholder="strings.searchOrders" v-model="searchString" v-on:keyup.enter="fireFromSearch()">\n              <span class="uip-icon uip-text-muted uip-margin-right-xs uip-text-l uip-icon uip-icon-medium" v-if="searchString != \'\'">keyboard_return</span>\n          </div>\n        </div>\n        \n\t\t\t  <div class="uip-grid-col-4 uip-list-area" style="--grid-layout-gap:var(--uip-margin-m);--grid-item--min-width:220px">\n        \n\t\t\t     <template v-for="state in returnStates">\n                \n                <div class="uip-flex-grow uip-flex uip-flex-column uip-gap-s">\n                \n                  \x3c!--title area--\x3e\n                  <div class="uip-flex uip-gap-xs uip-flex-center">\n                    <div class="uip-text-muted uip-status-title">{{state.label}}</div>\n                    <div class="uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-s uip-background-muted" >\n                      {{state.found}}\n                    </div>\n                  </div>\n                  \x3c!--title area--\x3e\n                  \n                  \n                  \x3c!--Order area--\x3e\n                  <div class="uip-flex uip-flex-column uip-row-gap-xs">\n                  \n                    <div class="uip-flex uip-flex-center uip-flex-middle uip-padding-s" v-if="globalLoading"><loading-chart></loading-chart></div>\n                    <uip-order-list v-else :parent="state" :updateOrders="function(d){state.orders == d}" :fetchMore="getStateOrders"></uip-order-list>\n                    \n                  </div>\n                  \x3c!--End of order area--\x3e\n                  \n                </div>\n                \n           </template>\n\t\t\t  \n        </div>\n\t\t\t\t  \n\t\t\t</div>'}};let orderList={components:{"uip-draggable":VueDraggableNext},props:{parent:Object,search:String,fetchMore:Function},data:function(){return{cancelNotes:"",strings:{loadMore:__("Load more","uipress-pro"),cancelOrder:__("Cancel order","uipress-pro"),cancellationNotes:__("Cancellation notes","uipress-pro"),emptyColumn:__("No orders found with this status")}}},inject:["uipress"],mounted:function(){},watch:{},methods:{returnStatusBG:e=>"completed"==e?"uip-background-primary-wash":"processing"==e?"uip-background-green-wash":"failed"==e?"uip-background-red-wash":"uip-background-orange-wash",setDragClasses(){let e=[];return e.class="uip-flex uip-flex-column uip-row-gap-xs",e},returnStateColor(e){return"background-color:"+this.parent.color},itemAdded(e){let i=this;e.added&&(this.parent.found=parseInt(this.parent.found)+1,this.updateOrderStatus(e.added.element)),e.removed&&(parseInt(this.parent.found)>0&&(this.parent.found=parseInt(this.parent.found)-1),setTimeout(function(){i.fetchMore(i.parent,!0)},1e3))},updateOrderStatus(e,i,r){let t=this;void 0===i&&(i=t.parent.name);let n=new FormData;n.append("action","uip_update_order_status"),n.append("security",uip_ajax.security),n.append("orderID",e.ID),n.append("newStatus",i),n.append("cancelNotes",t.cancelNotes),t.uipress.callServer(uip_ajax.ajax_url,n).then(e=>{e.error&&t.uipress.notify(e.message,"","error"),e.success&&(t.uipress.notify(__("Order updated","uipress-pro"),"","success"),"cancelled"==i&&t.parent.orders.splice(r,1))})},returnQuickEdit(e){let i=new URL(e);return i.searchParams.set("uip-framed-page",1),i.href}},template:'\n    \n    \n    <div>\n      \n      \x3c!--HEADER--\x3e\n      <div class="uip-border-dashed uip-border-round uip-padding-xs uip-text-center uip-text-muted" v-if="parent.orders.length < 1" style="border-color:var(--uip-border-color)">\n        {{strings.emptyColumn}}\n      </div>\n      \n      <uip-draggable v-if="parent.orders && parent.orders.length > 0" \n      :list="parent.orders" \n      class="uip-flex uip-flex-column uip-max-w-100p"\n      :group="{ name: \'uip-orders\', pull: true, put: true, revertClone: true }"\n      animation="300"\n      @start="drag = true" \n      @end="drag = false" \n      @change="itemAdded"\n      handle=".uip-drag-handle"\n      :sort="false"\n      itemKey="id">\n      \n        <template v-for="(order, index) in parent.orders" :key="order.id" :index="index">\n      \n          \n          <div class="uip-border-round uip-padding-xs uip-border uip-shadow-small uip-background-default uip-cursor-drag uip-order-card">\n          \n            <div class="uip-flex uip-flex-row uip-gap-xs">\n            \n              <div class="uip-flex uip-gap-s uip-flex-start uip-drag-handle uip-flex-grow">\n                <div class="uip-border-circle uip-w-22 uip-ratio-1-1 uip-background-cover" :style="\'background-image:url(\' + order.img + \')\'"></div>\n                \n                <div class="uip-flex-grow uip-flex uip-flex-column uip-row-gap-xxs">\n                \n                  <div class="uip-text-emphasis">{{order.customerName}}</div>\n                  \n                  <div class="uip-flex uip-gap-xxs uip-flex-center uip-text-s uip-text-muted uip-flex-wrap">\n                  \n                    <div class="" v-html="order.total"></div>\n                    \n                    <div class="">{{order.modified}}</div>\n                    \n                  </div>\n                \n                </div>\n                \n                <div class="uip-border-round uip-padding-xxxs uip-post-type-label uip-flex uip-gap-xxs uip-flex-center uip-text-bold uip-tag-label uip-text-s" :style="returnStateColor(parent)">{{order.orderID}}</div>\n              </div>\n              \n              <div class="">\n              \n                <drop-down dropPos="bottom-right">\n                \n                  <template v-slot:trigger>\n                    <div class="uip-icon uip-text-l uip-link-default">more_vert</div>\n                  </template>\n                  \n                  <template v-slot:content>\n                    \n                    <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-border-bottom">\n                      \n                      <uip-offcanvas position="right" style="padding:0;width:600px;max-width:90%">\n                        <template v-slot:trigger>\n                          <div class="uip-flex uip-gap-xs uip-link-default">\n                            <div class="uip-icon uip-text-l">visibility</div>\n                            <div class="">Quick view</div>\n                          </div>\n                        </template>\n                        <template v-slot:content>\n                          \n                          <iframe class="uip-w-100p uip-h-viewport" :src="returnQuickEdit(order.editLink)"></iframe>\n                          \n                        </template>\n                      </uip-offcanvas>\n                      \n                      <a class="uip-flex uip-gap-xs uip-link-default uip-no-underline" :href="order.editLink">\n                        <div class="uip-icon uip-text-l">edit</div>\n                        <div class="">Edit</div>\n                      </a>\n                    \n                    </div>\n                    \n                    \n                    <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs">\n                    \n                      <div class="uip-flex uip-gap-xs uip-link-danger uip-no-underline">\n                        <div class="uip-icon uip-text-l">cancel</div>\n                        \n                        <drop-down dropPos="bottom-right">\n                          <template v-slot:trigger>\n                            <div class="">{{strings.cancelOrder}}</div>\n                          </template>\n                          <template v-slot:content>\n                            <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xs">\n                              <textarea rows="4" class="uip-input" v-model="cancelNotes" :placeholder="strings.cancellationNotes + \'...\'"></textarea>\n                              <button class="uip-button-danger" @click="updateOrderStatus(order, \'cancelled\', index)">{{strings.cancelOrder}}</button>\n                            </div>\n                          </template>\n                        </drop-down>    \n                      </div>\n                    \n                    </div>\n                    \n                  </template>\n                 \n                </drop-down>  \n              \n              </div>\n              \n            </div>\n            \n          </div>\n          \n        </template>\n        \n        \x3c!--FOOTER--\x3e\n        <template #footer >\n          \n          <div class="uip-flex uip-flex-center uip-flex-middle uip-padding-s" v-if="parent.loading"><loading-chart></loading-chart></div>\n        \n          <div class="uip-flex uip-gap-xxs uip-link-muted uip-margin-top-xs uip-flex-center" v-if="parent.orders.length < parent.found" @click="fetchMore(parent)">\n            <div class="uip-icon">add</div>\n            <div>{{strings.loadMore}}</div>\n          </div>\n          \n        </template>\n      \n      </uip-draggable>\n    \n    </div>\n    '};