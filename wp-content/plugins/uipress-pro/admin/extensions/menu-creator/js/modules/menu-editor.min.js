const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{props:{returnData:Function,value:Object},data:function(){return{OGmenu:structuredClone(uipMenuBuilderMenu.menu),OGsubmenu:structuredClone(uipMenuBuilderMenu.submenu),menu:structuredClone(uipMenuBuilderMenu.menu),submenu:structuredClone(uipMenuBuilderMenu.submenu),strings:{renameItem:__("Rename item","uipress-pro"),openMenuEditor:__("Open menu editor","uipress-pro"),itemName:__("Item name","uipress-pro"),separator:__("Separator","uipress-pro"),itemVisibility:__("Item visibiity","uipress-pro"),toggleSubmenu:__("Show submenu","uipress-pro"),addToMenu:__("Add to menu","uipress-pro"),addToSubMenu:__("Add to submenu","uipress-pro"),newSeparator:__("Separator","uipress-pro"),newLink:__("Link","uipress-pro"),deleteItem:__("Delete item","uipress-pro"),advancedMenuEditor:__("Advanced menu editor","uipress-pro"),advanced:__("Advanced","uipress-pro"),customClasses:__("Custom classes","uipress-pro"),resetToDefault:__("Reset to default","uipress-pro"),openInNewTab:__("Open in a new tab?","uipress-pro"),withoutFrame:__("Open outside frame","uipress-pro"),withoutUiPress:__("Open without UiPress","uipress-pro"),customLink:__("Custom URL","uipress-pro"),capabilities:__("Capability","uipress-pro"),capabilityDescription:__("Replaces capability required for viewing this menu item","uipress-pro"),classesDescription:__("Add classes seperated by a space","uipress-pro")}}},inject:["uipress"],watch:{menu:{handler(e,n){void 0!==this.returnData&&this.returnData({menu:this.menu,submenu:this.submenu})},deep:!0}},mounted:function(){this.setCustomMenu()},methods:{setCustomMenu(){void 0!==this.value&&this.uipress.isObject(this.value)&&(this.menu=this.value.menu,this.submenu=this.value.submenu)},setdropAreaStyles(e){let n=[];return n.class="uip-flex uip-flex-column uip-row-gap-xs",e&&(n.class="uip-flex uip-flex-column"),n},newMenuItem(e,n,i){let p={0:__("Custom menu item","uipress-pro"),1:"read",2:this.uipress.createUID(),uip_uid:this.uipress.createUID(),type:"custom",customItem:!0,custom:{name:__("Custom menu item","uipress-pro"),icon:"favorite",url:""}};"sep"==e&&(p.type="sep",p.custom={name:""},p[4]="wp-menu-separator"),i?Array.isArray(this.submenu[n[2]])?this.submenu[n[2]].push(p):this.submenu[n[2]]=[p]:n.unshift(p)},deleteItem(e,n,i,p){i.splice(n,1)},returnFormattedIcon:e=>void 0!==e&&e?e.includes("uipblank")?e.replace("uipblank",""):e:"",resetMenu(){this.menu=this.OGmenu,this.submenu=this.OGsubmenu},returnPlaceHolder:e=>""==e||void 0===e?__("Item name","uipress-pro"):e,addFromOG(e,n){let i=JSON.parse(JSON.stringify(e));n?Array.isArray(this.submenu[n[2]])?this.submenu[n[2]].push(i):this.submenu[n[2]]=[i]:this.menu.unshift(i)}},template:'\n    \n          <div class="">\n              \n              <div class="uip-flex uip-gap-xs uip-margin-bottom-s uip-flex-between">\n                <drop-down dropPos="left">\n                  \n                  <template v-slot:trigger>\n                    <button class="uip-button-default uip-flex uip-flex-row uip-gap-xxs">\n                      <span class="uip-icon">add</span>\n                      <span>{{strings.addToMenu}}</span>\n                    </button>\n                  </template>\n                  \n                  <template v-slot:content>\n                    <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-max-h-400 uip-overflow-auto">\n                    \n                      <div class="uip-link-default hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-gap-m uip-flex-between uip-flex-center" @click="newMenuItem(\'link\', menu)">\n                        \n                        <span>{{strings.newLink}}</span>\n                        <span class="uip-icon">link</span>\n                        \n                      </div>\n                      \n                      <div class="uip-link-default hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-gap-m uip-flex-between uip-flex-center" @click="newMenuItem(\'sep\', menu)">\n                        \n                        <span>{{strings.newSeparator}}</span>\n                        <span class="uip-icon">title</span>\n                        \n                      </div>\n                      \n                      <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n                      \n                      <template v-for="item in OGmenu">\n                        <div v-if="item.type != \'sep\'" @click="addFromOG(item)"\n                        class="uip-link-default hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-flex-between uip-flex-center uip-gap-m">\n                          <span>{{item.cleanName}}</span>\n                          <span class="uip-icon">add</span>\n                        </div>\n                        \n                        <div v-if="OGsubmenu[item[2]]" class="uip-margin-left-s uip-margin-bottom-xs">\n                          <template v-for="sub in OGsubmenu[item[2]]">\n                            <div v-if="sub.type != \'sep\'" @click="addFromOG(sub)"\n                            class="uip-link-muted hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-flex-between uip-flex-center uip-gap-m">\n                              <span>{{sub.cleanName}}</span>\n                              <span class="uip-icon">add</span>\n                            </div>\n                          </template>\n                        </div>\n                      </template>\n                      \n                    </div>\n                  </template>\n                  \n                </drop-down>\n                \n                \n                <button class="uip-button-warning uip-flex uip-flex-row uip-gap-xs uip-flex-center" @click="resetMenu()">\n                  <span class="uip-icon">restart_alt</span>\n                  <span>{{strings.resetToDefault}}</span>\n                </button>\n                \n                \n                \n              </div>\n            \n            <draggable \n            class="uip-flex uip-flex-column uip-row-gap-xs" \n            :group="{ name: \'menuItems\', pull: true, put: true }"\n            :list="menu"\n            ref="dropzone"\n            animation="300"\n            :sort="true"\n            itemKey="uid"\n            handle=".uip-drag-handle">\n                    \n              <template v-for="(parent, index) in menu" \n              :key="parent.uid" :index="index">\n              \n                <div>\n                  \x3c!-- top level items--\x3e\n                  <div class="uip-flex uip-flex-row uip-gap-s uip-flex-center  uip-background-muted uip-border-rounder uip-padding-xxs">\n                    \n                    <div class="uip-icon uip-drag-handle uip-cursor-drag uip-padding-xxxs uip-border-round uip-background-grey">drag_indicator</div>\n                    \n                    <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-grow" :class="{\'uip-opacity-20\' : parent.custom.hidden}" >\n                    \n                      <inline-icon-select :value="{value: parent.custom.icon}" :returnData="function(e){parent.custom.icon = e.value}">\n                        <template v-slot:trigger>\n                          <div class="uip-padding-xxxs uip-w-14 uip-ratio-1-1 uip-border uip-border-round uip-flex uip-flex-center uip-flex-middle">\n                            <div class="uip-icon" v-html="returnFormattedIcon(parent.custom.icon)"></div>\n                          </div>\n                        </template>\n                      </inline-icon-select>\n                      <div class=" uip-flex uip-flex-row uip-gap-xxs">\n                        <div v-if="parent.type == \'sep\'" class="uip-text-s uip-padding-xxxs uip-border-round uip-background-orange-wash">{{strings.separator}}</div>\n                        <input class="uip-blank-input" type="text" v-model="parent.custom.name" :placeholder="returnPlaceHolder(parent.cleanName)">\n                      </div>\n                      \n                    </div>\n                    \n                    \x3c!--Item options --\x3e\n                    <div class="uip-flex uip-flex-row uip-gap-xxs">\n                      \n                      \n                      <uip-tooltip :message="strings.itemVisibility">\n                        <div @click="parent.custom.hidden = !parent.custom.hidden" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer"\n                        :class="{\'uip-text-danger\' : parent.custom.hidden}" >visibility</div>\n                      </uip-tooltip>\n                      \n                     \n                      <drop-down dropPos="left">\n                        <template v-slot:trigger>\n                          <uip-tooltip :message="strings.advanced">\n                            <div class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l">more_vert</div>\n                          </uip-tooltip>\n                        </template>\n                        <template v-slot:content>\n                        \n                          <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-s">\n                              \n                              <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                <div class="">{{strings.customClasses}}</div>\n                                <input class="uip-input uip-input-small" type="text" v-model="parent.custom.classes" :placeholder="strings.classesDescription">\n                              </div>\n                              \n                              <div v-if="parent.type != \'sep\'" class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                <div class="">{{strings.customLink}}</div>\n                                <input class="uip-input uip-input-small" type="text" v-model="parent.custom.url" :placeholder="parent[2]">\n                              </div>\n                              \n                              \n                              <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                <div class="">{{strings.capabilities}}</div>\n                                <input class="uip-input uip-input-small" type="text" v-model="parent.custom.capabilities" :placeholder="parent[1]">\n                                <div class="uip-text-s uip-text-muted uip-max-w-200">{{strings.capabilityDescription}}</div>\n                              </div>\n                              \n                          </div>\n                          \n                          \n                        </template>\n                      </drop-down>\n                      \n                      <div v-if="parent.type != \'sep\'" class="uip-border-left uip-margin-left-xxs uip-margin-right-xxs"></div>\n                      \n                      \n                      <uip-tooltip v-if="parent.type != \'sep\'" :message="strings.toggleSubmenu">\n                        <div  v-if="!parent.subOpen" @click="parent.subOpen = !parent.subOpen" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer">chevron_left</div>\n                        <div v-else @click="parent.subOpen = !parent.subOpen" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer">expand_more</div>\n                      </uip-tooltip>\n                      \n                      <uip-tooltip :message="strings.deleteItem">\n                        <div  @click="deleteItem(parent, index, menu, true)" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer uip-link-danger">delete</div>\n                      </uip-tooltip>\n                    </div>\n                    \x3c!--End item options --\x3e\n                    \n                  </div>\n                  \x3c!--End top level items--\x3e\n                  \n                  \n                  \n                  \n                  \n                  \n                  \x3c!-- SUB LEVEL ITEMS --\x3e\n                  <div class=" uip-margin-top-s uip-margin-bottom-m uip-scale-in" v-if="parent.type != \'sep\' && parent.subOpen">\n                    \n                    \n                    <draggable \n                    class="uip-flex uip-flex-column" \n                    :group="{ name: \'menuItems\', pull: true, put: true }"\n                    :list="submenu[parent[2]]"\n                    ref="dropzone"\n                    animation="300"\n                    :sort="true"\n                    itemKey="uid"\n                    handle=".uip-drag-handle">\n                            \n                      <template v-for="(subitem, index) in submenu[parent[2]]" \n                      :key="subitem.uid" :index="index">\n                        \n                        \n                          <div class="uip-flex uip-flex-row uip-gap-s uip-flex-center hover:uip-background-muted uip-border-rounder uip-padding-xxs">\n                            \n                            <div class="uip-icon uip-drag-handle uip-cursor-drag uip-padding-xxxs uip-border-round uip-background-grey">drag_indicator</div>\n                            \n                            <div class="uip-flex uip-flex-row uip-gap-xs uip-flex-grow" :class="{\'uip-opacity-20\' : subitem.custom.hidden}" >\n                            \n                              <div class=" uip-flex uip-flex-row uip-gap-xxs">\n                                <div v-if="subitem.type == \'sep\'" class="uip-text-s uip-padding-xxxs uip-border-round uip-background-orange-wash">{{strings.separator}}</div>\n                                <input class="uip-blank-input" type="text" v-model="subitem.custom.name" :placeholder="returnPlaceHolder(subitem.cleanName)">\n                              </div>\n                              \n                            </div>\n                            \n                            \x3c!--Item options --\x3e\n                            <div class="uip-flex uip-flex-row uip-gap-xxs">\n                            \n                              \n                              \n                              <uip-tooltip :message="strings.itemVisibility">\n                                <div @click="subitem.custom.hidden = !subitem.custom.hidden" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer"\n                                :class="{\'uip-text-danger\' : subitem.custom.hidden}" >visibility</div>\n                              </uip-tooltip>\n                              \n                              \n                              \n                              <drop-down dropPos="left">\n                                <template v-slot:trigger>\n                                  <uip-tooltip :message="strings.advanced">\n                                    <div class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l">more_vert</div>\n                                  </uip-tooltip>\n                                </template>\n                                <template v-slot:content>\n                                \n                                  \n                                  <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-s">\n                                      \n                                      <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                        <div class="">{{strings.customClasses}}</div>\n                                        <input class="uip-input uip-input-small" type="text" v-model="subitem.custom.classes" :placeholder="strings.classesDescription">\n                                      </div>\n                                      \n                                      <div v-if="subitem.type != \'sep\'" class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                        <div class="">{{strings.customLink}}</div>\n                                        <input class="uip-input uip-input-small" type="text" v-model="subitem.custom.url" :placeholder="subitem[2]">\n                                      </div>\n                                      \n                                      \n                                      <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                        <div class="">{{strings.capabilities}}</div>\n                                        <input class="uip-input uip-input-small" type="text" v-model="subitem.custom.capabilities" :placeholder="subitem[1]">\n                                        <div class="uip-text-s uip-text-muted uip-max-w-200">{{strings.capabilityDescription}}</div>\n                                      </div>\n                                      \n                                  </div>\n                                  \n                                  \n                                </template>\n                              </drop-down>\n                              \n                              \n                              \n                              <uip-tooltip :message="strings.deleteItem">\n                                <div  @click="deleteItem(subitem, index, submenu[parent[2]])" class="uip-icon uip-padding-xxxs hover:uip-background-grey uip-border-round uip-text-l uip-cursor-pointer uip-link-danger">delete</div>\n                              </uip-tooltip>\n                              \n                            </div>\n                            \x3c!--End item options --\x3e\n                            \n                          </div>\n                        \n                      </template>\n                      \n                      \n                      \n                    </draggable>\n                    \n                    \x3c!--Footer--\x3e\n                    <div class="uip-flex uip-margin-top-xs">\n                      <drop-down dropPos="left">\n                        \n                        <template v-slot:trigger>\n                          <div class="uip-padding-xs">\n                            <a class="uip-link-muted uip-flex uip-flex-row uip-gap-xs uip-flex-center">\n                              <span class="uip-icon uip-text-l">add</span>\n                              <span>{{strings.addToSubMenu}}</span>\n                            </a>\n                          </div>\n                        </template>\n                        \n                        <template v-slot:content>\n                          \n                          \n                          <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-max-h-400 uip-overflow-auto">\n                          \n                            <div class="uip-link-default hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-gap-m uip-flex-between uip-flex-center" @click="newMenuItem(\'link\', parent, true)">\n                              \n                              <span>{{strings.newLink}}</span>\n                              <span class="uip-icon">link</span>\n                              \n                            </div>\n                            \n                            <div class="uip-link-default hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-gap-m uip-flex-between uip-flex-center" @click="newMenuItem(\'sep\', parent, true)">\n                              \n                              <span>{{strings.newSeparator}}</span>\n                              <span class="uip-icon">title</span>\n                              \n                            </div>\n                            \n                            <div class="uip-border-top uip-margin-top-xs uip-margin-bottom-xs"></div>\n                            \n                            <template v-for="item in OGmenu">\n                              <div v-if="item.type != \'sep\'" @click="addFromOG(item,parent)"\n                              class="uip-link-default hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-flex-between uip-flex-center uip-gap-m">\n                                <span>{{item.cleanName}}</span>\n                                <span class="uip-icon">add</span>\n                              </div>\n                              \n                              <div v-if="OGsubmenu[item[2]]" class="uip-margin-left-s uip-margin-bottom-xs">\n                                <template v-for="sub in OGsubmenu[item[2]]">\n                                  <div v-if="sub.type != \'sep\'" @click="addFromOG(sub, parent)"\n                                  class="uip-link-muted hover:uip-background-muted uip-border-rounder uip-padding-xxxs uip-flex uip-flex-between uip-flex-center uip-gap-m">\n                                    <span>{{sub.cleanName}}</span>\n                                    <span class="uip-icon">add</span>\n                                  </div>\n                                </template>\n                              </div>\n                            </template>\n                            \n                          </div>\n                          \n                          \n                        </template>\n                        \n                      </drop-down>\n                    </div>\n                    \n                  </div>\n                  \x3c!-- END SUB LEVEL ITEMS --\x3e\n                \n                </div>\n                \n              </template>\n              \n              \n            </draggable>\n            \n          \n          </div>'}};