const{__:__,_x:_x,_n:_n,_nx:_nx}=wp.i18n;export function moduleData(){return{data:function(){return{loading:!0,id:this.$route.params.id,saving:!1,activeTab:"content",switchOptions:{content:{value:"content",label:__("Menu items","uipress-lite")},settings:{value:"settings",label:__("Settings","uipress-lite")}},strings:{active:__("Active","uipress-pro"),name:__("Name","uipress-pro"),autoUpdate:__("Auto update","uipress-pro"),autoUpdateDesc:__("Enabling this option will allow the menu to update automatically as you add or remove plugins","uipress-pro"),applyToSubsite:__("Apply to subsites","uipress-pro"),appliesTo:__("Applies to","uipress-pro"),excludes:__("Excludes","uipress-pro"),selectUsersAndRoles:__("Select users and roles","uipress-pro"),searchUsersAndRoles:__("Search users and roles","uipress-pro"),saveMenu:__("Save menu","uipress-pro"),cancel:__("Cancel","uipress-pro"),menuName:__("Menu name","uipress-pro"),menuSaved:__("Menu saved","uipress-pro"),appliesDescription:__("Who you want the menu to load for","uipress-pro"),excludesDescription:__("Who you would like the menu to not load for (optional)","uipress-pro")},customMenu:{menu:[],status:!1,appliesTo:[],excludes:[],name:"",autoUpdate:!1,multisite:!1},enabledDisabled:{false:{value:!1,label:__("Disabled","uipress-lite")},true:{value:!0,label:__("Enabled","uipress-lite")}}}},inject:["router","uipress","refreshList"],mounted:function(){this.getMenu()},watch:{},computed:{},methods:{closeOffcanvas(){this.router.push("/")},getMenu(){let e=this;e.loading=!0;let i=new FormData;i.append("action","uipress_get_menu"),i.append("security",uip_ajax.security),i.append("id",e.id),e.uipress.callServer(uip_ajax.ajax_url,i).then(i=>{if(i.error)return e.uipress.notify(i.message,"","error",!0),void(e.loading=!1);e.customMenu={...e.customMenu,...i.menuOptions},e.loading=!1})},saveMenu(){let e=this;e.saving=!0;let i=JSON.stringify(e.customMenu,(e,i)=>"true"===i?"uiptrue":!0===i?"uiptrue":"false"===i?"uipfalse":!1===i?"uipfalse":""===i?"uipblank":i),t=new FormData;t.append("action","uipress_save_menu"),t.append("security",uip_ajax.security),t.append("menu",i),t.append("id",e.id),e.uipress.callServer(uip_ajax.ajax_url,t).then(i=>{i.error?e.uipress.notify(i.message,"","error",!0):(e.uipress.notify(e.strings.menuSaved,"","success",!0),e.saving=!1,e.refreshList())})}},template:'\n      <component is="style"> #wpadminbar{z-index:8;}#adminmenuwrap{z-index:7;} </component>\n\n      <div\n        ref="offCanvasCover"\n        class="uip-position-fixed uip-w-100p uip-top-0 uip-bottom-0 uip-text-normal uip-flex uip-fade-in uip-transition-all"\n        style="background:rgba(0,0,0,0.3);z-index:9;top:0;left:0;right:0;max-height:100%;backdrop-filter: blur(2px);"\n      >\n        \x3c!-- MODAL GRID --\x3e\n        <div class="uip-flex uip-w-100p uip-h-100p">\n          <div class="uip-flex-grow" @click="closeOffcanvas()"></div>\n\n          <div ref="offCanvasBody" class="uip-w-500 uip-border-box uip-offcanvas-panel uip-position-relative uip-padding-s uip-padding-right-remove uip-margin-right-s" style="max-height: 100%;min-height: 100%;height:100%">\n\t\t  \n            <div class="uip-flex uip-slide-in-right uip-background-default uip-border-rounder uip-position-relative uip-shadow uip-border uip-border-box uip-overflow-auto" style="max-height: 100%;min-height: 100%;height:100%">\n            \n              <div class="uip-position-absolute uip-top-0 uip-padding-m uip-padding-top-s uip-padding-bottom-s uip-right-0 uip-z-index-1">\n                <span @click="closeOffcanvas()" class="uip-icon uip-padding-xxs uip-border-round hover:uip-background-grey uip-cursor-pointer uip-link-muted uip-text-l"> close </span>\n              </div>\n\n              <div class="uip-position-relative uip-h-100p uip-flex uip-w-100p uip-flex uip-max-h-100p uip-flex uip-flex-column uip-h-100p uip-max-h-100p">\n                \n                \n                <div class="uip-border-box uip-w-100p uip-padding-m uip-padding-top-s uip-padding-bottom-s uip-flex uip-flex-column uip-row-gap-m">\n                  <div class="uip-text-l uip-text-bold">{{customMenu.name}}</div>\n                </div>\n                \n                \n                <div class="uip-border-box uip-w-100p uip-padding-m uip-padding-top-s uip-padding-bottom-remove uip-flex uip-flex-column uip-row-gap-m">\n                \n                  <toggle-switch :options="switchOptions" :activeValue="activeTab" :dontAccentActive="true" :returnValue="function(data){ activeTab = data}"></toggle-switch>\n                \n                </div>\n\n                <div v-if="loading" class="uip-w-100p uip-flex uip-flex-center uip-flex-middle uip-padding-l uip-border-box uip-w-100p">\n                  <loading-chart></loading-chart>\n                </div>\n\n                <template v-else>\n                \n                  <div v-if="activeTab == \'content\'" class="uip-padding-m uip-flex-grow uip-overflow-auto uip-flex-grow uip-overflow-auto">\n                    <menu-editor :value="customMenu.menu" :returnData="function(d){customMenu.menu = d}"></menu-editor>\n                  </div>\n\n                  <div v-if="activeTab == \'settings\'" class="uip-padding-m uip-flex uip-flex-column uip-row-gap-m uip-flex-grow uip-overflow-auto">\n                    <div class="uip-grid-col-2 uip-grid-gap-m">\n                    \n                      <div class="uip-text-bold uip-margin-bottom-xs">{{strings.name}}</div>\n                      <input type="text" class="uip-input" v-model="customMenu.name" :placeholder="strings.menuName" />\n                    \n\n                      <div class="uip-text-bold uip-margin-bottom-xs">{{strings.active}}</div>\n                      <toggle-switch :options="enabledDisabled" :activeValue="customMenu.status" :returnValue="function(data){ customMenu.status = data;}"></toggle-switch>\n                      \n                      \n                      <template v-if="uipress.uipOptions.primarySite">\n                      <div class="uip-text-bold uip-margin-bottom-xs">{{strings.applyToSubsite}}</div>\n                      <toggle-switch :options="enabledDisabled" :activeValue="customMenu.multisite" :returnValue="function(data){ customMenu.multisite = data;}"></toggle-switch>\n                      </template>\n                   \n\n                      <div>\n                        <div class="uip-text-bold uip-margin-bottom-xs">{{strings.autoUpdate}}</div>\n                        <div class="uip-text-s uip-text-muted uip-margin-bottom-xs">{{strings.autoUpdateDesc}}</div>\n                      </div>\n                      \n                      <toggle-switch :options="enabledDisabled" :activeValue="customMenu.autoUpdate" :returnValue="function(data){ customMenu.autoUpdate = data;}"></toggle-switch>\n                      \n                    </div>\n\n                    <div class="uip-grid-col-2 uip-grid-gap-m">\n\t\t\t\t\t\n\t\t\t\t\t           <div>\n                        <div class="uip-text-bold uip-margin-bottom-xs">{{strings.appliesTo}}</div>\n\t\t\t\t\t  \t          <div class="uip-text-s uip-text-muted uip-margin-bottom-xs">{{strings.appliesDescription}}</div>\n\t\t\t\t\t            </div>\n\n                      <user-role-select\n                        :selected="customMenu.appliesTo"\n                        :placeHolder="strings.selectUsersAndRoles"\n                        :searchPlaceHolder="strings.searchUsersAndRoles"\n                        :single="false"\n                        :updateSelected="function(data){fetchReturnData(data, customMenu.appliesTo)}"/>\n                        \n                    </div>\n\n                    <div class="uip-grid-col-2 uip-grid-gap-m">\n                    \n\t\t\t\t\t           <div>\n                        <div class="uip-text-bold uip-margin-bottom-xs">{{strings.excludes}}</div>\n\t\t\t\t\t              <div class="uip-text-s uip-text-muted uip-margin-bottom-xs">{{strings.excludesDescription}}</div>\n\t\t\t\t\t            </div>\n\n                      <user-role-select\n                        :selected="customMenu.excludes"\n                        :placeHolder="strings.excludes"\n                        :searchPlaceHolder="strings.excludes"\n                        :single="false"\n                        :updateSelected="function(data){fetchReturnData(data, customMenu.excludes)}"\n                      ></user-role-select>\n                    </div>\n                  </div>\n\n                  <div class="uip-border-box uip-w-100p uip-padding-m uip-padding-top-s uip-padding-bottom-s uip-flex uip-flex-row uip-flex-between uip-row-gap-s uip-border-top">\n                    <button class="uip-button-default" @click="closeOffcanvas()">{{strings.cancel}}</button>\n                    <button class="uip-button-primary" @click="saveMenu">{{strings.saveMenu}}</button>\n                  </div>\n                </template>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    '}};