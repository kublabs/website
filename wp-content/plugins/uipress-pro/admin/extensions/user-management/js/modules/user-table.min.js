export function moduleData(){return{props:{data:Object,dataChange:Function},provide(){return{refreshTable:this.getUserData}},data:function(){return{loading:!0,modData:this.data,tableData:[],tablePage:1,selectAll:!1,queryRunning:!1,tableFilters:{search:"",roles:[],dateCreated:{type:"on",date:""},activeGroup:"all"},tableOptions:{direction:"ASC",sortBy:"username",perPage:20},ui:{offcanvas:{userPanelOpen:!1,messagePanelOpen:!1,newUserOpen:!1,batchRolePanelOpen:!1},activeUser:0,groupsOpen:!1,messageRecipient:[],batchMessageRecipient:[],groups:[]}}},inject:["uipress"],mounted:function(){this.loading=!1,this.getUserData(),this.data.refreshTable=this.getUserData},watch:{modData:{handler(e,i){this.dataChange(e)},deep:!0},tableFilters:{handler(e,i){this.getUserData()},deep:!0},tableOptions:{handler(e,i){this.getUserData()},deep:!0},selectAll:{handler(e,i){1==e?this.selectAllUsers():this.deSelectAllUsers()}}},computed:{returnTableData(){return this.tableData},totalSelected(){let e=this,i=0;for(var t in e.tableData.users)e.tableData.users[t].selected&&1==e.tableData.users[t].selected&&(i+=1);return i},getTotalSelected(){let e=this,i=[];for(var t in e.tableData.users)e.tableData.users[t].selected&&1==e.tableData.users[t].selected&&i.push(e.tableData.users[t].user_id);return i},getTotalSelectedUsers(){let e=this,i=[];for(var t in e.tableData.users)e.tableData.users[t].selected&&1==e.tableData.users[t].selected&&i.push(e.tableData.users[t]);return i},returnUsersAsString(){let e=this,i=[];for(var t in e.tableData.users)e.tableData.users[t].selected&&1==e.tableData.users[t].selected&&i.push(e.tableData.users[t].user_email);return i.join(",")}},methods:{selectAllUsers(){let e=this;for(var i in e.tableData.users)e.tableData.users[i].selected=!0;e.selectAll=!0},deSelectAllUsers(){let e=this;for(var i in e.tableData.users)e.tableData.users[i].selected=!1;e.selectAll=!1},changePage(e){"next"==e&&(this.tablePage+=1),"previous"==e&&(this.tablePage=this.tablePage-1),this.getUserData()},updateRoles(e){this.tableFilters.roles=e},getUserData(){let e=this;if(e.queryRunning)return;e.queryRunning=!0;let i=new FormData;i.append("action","uip_get_user_table_data"),i.append("security",uip_ajax.security),i.append("tablePage",e.tablePage),i.append("filters",JSON.stringify(e.tableFilters)),i.append("options",JSON.stringify(e.tableOptions)),e.uipress.callServer(uip_ajax.ajax_url,i).then(i=>{let t=i;e.queryRunning=!1;let n=[];e.tableData.columns&&e.tableData.columns.length>0&&(n=e.tableData.columns),e.tableData=t.tableData,n.length>0&&(e.tableData.columns=n),e.selectAll=!1})},sendPasswordReset(e){let i=this,t=new FormData;t.append("action","uip_reset_password"),t.append("security",uip_ajax.security),t.append("userID",e.user_id),i.uipress.callServer(uip_ajax.ajax_url,t).then(e=>{let t=e;t.error?i.uipress.notify(t.message,"","error"):i.uipress.notify(t.message,"","success")})},deleteUser(e){let i=this;if(!confirm(i.data.translations.confirmUserDelete))return;let t=new FormData;t.append("action","uip_delete_user"),t.append("security",uip_ajax.security),t.append("userID",e),i.uipress.callServer(uip_ajax.ajax_url,t).then(e=>{let t=e;t.error?i.uipress.notify(t.message,"","error"):(i.uipress.notify(t.message,"","success"),i.getUserData())})},deleteMultiple(){let e=this;if(!confirm(e.data.translations.confirmUserDeleteMultiple))return;let i=e.getTotalSelected,t=new FormData;t.append("action","uip_delete_multiple_users"),t.append("security",uip_ajax.security),t.append("allIDS",JSON.stringify(i)),e.uipress.callServer(uip_ajax.ajax_url,t).then(i=>{let t=i;if(t.error)e.uipress.notify(t.message,"","error");else if(e.uipress.notify(t.message,"","success"),e.deSelectAllUsers(),e.getUserData(),t.undeleted.length>0)for(var n in t.undeleted){let i=t.undeleted[n],a=i.user+"<br>"+i.message;e.uipress.notify(a,"","error")}})},sendMultiplePasswordReset(){let e=this;if(!confirm(e.data.translations.confirmUserPassReset))return;let i=e.getTotalSelected,t=new FormData;t.append("action","uip_password_reset_multiple"),t.append("security",uip_ajax.security),t.append("allIDS",JSON.stringify(i)),e.uipress.callServer(uip_ajax.ajax_url,t).then(i=>{let t=i;if(t.error)e.uipress.notify(t.message,"","error");else{if(e.uipress.notify(t.message,"","success"),t.undeleted.length>0)for(var n in t.undeleted){let i=t.undeleted[n],a=i.user+"<br>"+i.message;e.uipress.notify(a,"","error")}e.deSelectAllUsers()}})},openMessenger(e){this.ui.messageRecipient=e,this.ui.offcanvas.messagePanelOpen=!0},openMessengerBatch(){this.ui.offcanvas.messagePanelOpen=!0},batchRoleUpdate(){this.ui.offcanvas.batchRolePanelOpen=!0},getActiveGroup(e){this.tableFilters.activeGroup=e},returnGroupTag(e){if(this.returnTableData.groups[e])return this.returnTableData.groups[e].title},returnGroupColour(e){if(this.returnTableData.groups[e])return"background:"+this.returnTableData.groups[e].color},viewUser(e){this.$router.push("/users/"+e+"/")},editUser(e){this.$router.push("/users/"+e+"/edit")},newUser(){this.$router.push("/users/new")}},template:' \n      <div class="uip-margin-top-m uip-text-normal uip-flex uip-flex-column">\n      \n        <div v-if="ui.groupsOpen" class=" uip-flex-no-shrink uip-w-100p">\n          <div class="uip-margin-bottom-s uip-text-bold uip-background-muted uip-padding-xs uip-border-round uip-flex uip-flex-center uip-text-bold">{{data.translations.groups}}</div>\n          <user-groups :currentGroup="tableFilters.activeGroup" :updateuserdata="getUserData" :appdata="data" :updateactivegroup="getActiveGroup"></user-groups>\n        </div>\n\n        \n        \n        \x3c!--Filters--\x3e\n        <div class="uip-flex uip-gap-s uip-flex-wrap uip-row-gap-s uip-margin-bottom-s">\n        \n          <tooltip v-if="1==2" :tooltiptext="data.translations.userGroups">\n            <div @click="ui.groupsOpen = !ui.groupsOpen" class="uip-background-muted uip-padding-xs uip-border-round hover:uip-background-grey uip-flex uip-flex-center uip-cursor-pointer">\n              <span class="uip-icon uk-form-icon">group</span>\n            </div>\n          </tooltip>\n          \n          <div class="uip-position-relative" v-if="totalSelected > 0">\n            <drop-down dropPos="bottom-left">\n            \n              <template v-slot:trigger>\n                <button class="uip-button-primary uip-flex uip-gap-xs uip-flex-center">\n                  <span class="uip-icon">settings</span>\n                  <span>{{totalSelected + \' \' + data.translations.usersSelected}}</span>\n                </button>\n              </template>\n              <template v-slot:content>\n              \n                <div class="uip-flex uip-flex-column">\n                \n                  <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-border-bottom">\n                    \n                    <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs uip-flex-center" @click="deSelectAllUsers()">\n                      <div class="uip-icon">backspace</div>\n                      <div>{{data.translations.clearSelection}}</div>\n                    </div>\n                    \n                  </div>\n                \n                  <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-border-bottom">\n                \n                    <router-link :to="\'/message/\' + returnUsersAsString" class="uip-flex uip-gap-xs uip-border-round uip-link-default uip-no-underline hover:uip-background-muted uip-padding-xxs uip-flex-center">\n                      <div class="uip-icon">mail</div>\n                      <div>{{data.translations.sendMessage}}</div>\n                    </router-link>\n                    <router-link :to="\'/batch/roles/\' + returnUsersAsString" class="uip-flex uip-gap-xs uip-border-round uip-link-default uip-no-underline hover:uip-background-muted uip-padding-xxs uip-flex-center" @click="batchRoleUpdate()">\n                      <div class="uip-icon">bookmarks</div>\n                      <div>{{data.translations.assignRoles}}</div>\n                    </router-link>\n                    <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs uip-flex-center" @click="sendMultiplePasswordReset()">\n                      <div class="uip-icon">lock</div>\n                      <div>{{data.translations.sendPasswordReset}}</div>\n                    </div>\n                  \n                  </div>\n                  \n                  <div class="uip-padding-xs">\n                    <div class="uip-flex uip-gap-xs uip-border-round uip-link-danger hover:uip-background-muted uip-padding-xxs uip-flex-center" @click="deleteMultiple()">\n                      <div class="uip-icon">delete</div>\n                      <div>{{data.translations.deleteUsers}}</div>\n                    </div>\n                  </div>\n                  \n                  \n                </div>\n              </template>\n              \n            </drop-down>\n          </div>\n          \n          <div class="hover:uip-background-muted uip-padding-xs uip-border-round  uip-flex uip-flex-center uip-gap-xs uip-flex-grow">\n            <span class="uip-icon uip-text-l">search</span>\n            <input class="uip-blank-input uip-flex-grow" :placeholder="data.translations.searchUsers" v-model="tableFilters.search" />\n          </div>\n          \n          \n          \n          <div class="uip-w-200">\n            <role-select\n              :selected="tableFilters.roles"\n              :name="data.translations.filterByRole"\n              :translations="data.translations"\n              :single="false"\n              :placeholder="data.translations.searchRoles"\n              :updateRoles="updateRoles"\n            ></role-select>\n          </div>\n          \n          \n          <div class="uip-flex uip-gap-xxs">\n            \x3c!-- DATE FILTERS --\x3e\n            <div class="uip-position-relative">\n              <drop-down dropPos="left">\n                <template v-slot:trigger>\n                  <div class="uip-icon uip-link-default uip-padding-xs hover:uip-background-muted uip-border-round uip-text-l">calendar_today</div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-s uip-flex-start">\n                    <div class="uip-text-muted uip-text-bold">{{data.translations.dateCreated}}</div>\n                    <div class="uip-flex uip-gap-xs uip-background-muted uip-border-round uip-padding-xxs">\n                      <div\n                        class="uip-padding-xxs uip-border-round uip-cursor-pointer"\n                        @click="tableFilters.dateCreated.type = \'on\'"\n                        :class="{\'uip-background-default uip-text-bold\' : tableFilters.dateCreated.type == \'on\'}"\n                      >\n                        {{data.translations.on}}\n                      </div>\n                      <div\n                        class="uip-padding-xxs uip-border-round uip-cursor-pointer"\n                        @click="tableFilters.dateCreated.type = \'after\'"\n                        :class="{\'uip-background-default uip-text-bold\' : tableFilters.dateCreated.type == \'after\'}"\n                      >\n                        {{data.translations.after}}\n                      </div>\n                      <div\n                        class="uip-padding-xxs uip-border-round uip-cursor-pointer"\n                        @click="tableFilters.dateCreated.type = \'before\'"\n                        :class="{\'uip-background-default uip-text-bold\' : tableFilters.dateCreated.type == \'before\'}"\n                      >\n                        {{data.translations.before}}\n                      </div>\n                    </div>\n                    <div>\n                      <input class="uip-input" type="date" v-model="tableFilters.dateCreated.date" />\n                    </div>\n                  </div>\n                </template>\n              </drop-down>\n              \n              \x3c!-- DATE FILTERS NUMBER DISPLAY --\x3e\n              <span v-if="tableFilters.dateCreated.date != \'\'"\n              class="uip-text-inverse uip-background-primary uip-border-round uip-text-s uip-w-18 uip-margin-left-xxs uip-text-center uip-position-absolute uip-right--8 uip-top--8">1</span>\n            </div>\n            \n            <div class="uip-icon uip-link-default uip-padding-xs hover:uip-background-muted uip-border-round uip-text-l" @click="newUser()">person_add</div>\n            \n            \n            \n            <drop-down dropPos="left">\n              <template v-slot:trigger>\n                <div class="uip-icon uip-link-default uip-padding-xs hover:uip-background-muted uip-border-round uip-text-l">tune</div>\n              </template>\n              <template v-slot:content>\n                <div class="uip-flex uip-flex-column">\n                  <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-padding-s uip-border-bottom">\n                    <div class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-gap-l">\n                      <div class="uip-flex uip-flex-center uip-gap-xs">\n                        <span class="uip-icon uip-text-l">swap_vert</span>\n                        <span>{{data.translations.order}}</span>\n                      </div>\n                      <div>\n                        <select v-model="tableOptions.direction" class="uip-input">\n                          <option value="ASC">{{data.translations.ascending}}</option>\n                          <option value="DESC">{{data.translations.descending}}</option>\n                        </select>\n                      </div>\n                    </div>\n            \n                    <div class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-gap-l">\n                      <div class="uip-flex uip-flex-center uip-gap-xs">\n                        <span class="uip-icon uip-text-l">sort</span>\n                        <span>{{data.translations.sortBy}}</span>\n                      </div>\n                      <div>\n                        <select v-model="tableOptions.sortBy" class="uip-input">\n                          <template v-for="column in returnTableData.columns">\n                            <option :value="column.name">{{column.label}}</option>\n                          </template>\n                        </select>\n                      </div>\n                    </div>\n            \n                    <div class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-gap-l">\n                      <div class="uip-flex uip-flex-center uip-gap-xs">\n                        <span class="uip-icon uip-text-l">format_list_numbered</span>\n                        <span>{{data.translations.perPage}}</span>\n                      </div>\n                      <div>\n                        <input type="number" min="1" max="2000" class="uip-input" v-model="tableOptions.perPage" />\n                      </div>\n                    </div>\n                  </div>\n            \n                  <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-padding-s">\n                    <div class="uip-text-muted uip-text-bold uip-padding-xxs">{{data.translations.fields}}</div>\n                    <div class="">\n                      <div\n                        v-for="column in returnTableData.columns"\n                        class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-border-round hover:uip-background-muted uip-cursor-pointer"\n                        @click="column.active = !column.active"\n                      >\n                        <div class="">{{column.label}}</div>\n                        <input type="checkbox" class="uip-checkbox" v-model="column.active" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </drop-down>\n          \n          </div>\n          \n        </div>\n        \x3c!--End Filters--\x3e\n          \n\n          <table class="uip-w-100p uip-border-collapse uip-margin-bottom-s">\n            <thead>\n              <tr class="uip-border-bottom">\n                <th class="uip-text-left uip-w-28 uip-padding-xs uip-padding-bottom-s"><input type="checkbox" class="uip-checkbox" v-model="selectAll" /></th>\n                <template v-for="column in returnTableData.columns">\n                  <th class="uip-text-left uip-text-weight-normal uip-text-muted uip-padding-xs uip-padding-bottom-s" :class="{\'uip-hidden-small\' : !column.mobile}" v-if="column.active">{{column.label}}</th>\n                </template>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <template v-for="user in returnTableData.users">\n                <tr class="hover:uip-background-muted uip-cursor-pointer">\n                  <td class="uip-border-bottom uip-w-28 uip-padding-xs">\n                    <div class=" uip-flex uip-gap-xs uip-flex-center">\n                      <input class="uip-user-check uip-checkbox" :data-id="user.user_id" type="checkbox" v-model="user.selected" />\n                      <div class="uip-flex uip-w-28"><span class="uip-icon uip-cursor-drag uip-user-drag" :data-id="user.user_id" draggable="true">drag_indicator</span></div>\n                    </div>\n                  </td>\n                  <template v-for="column in returnTableData.columns">\n                    <td class="uip-text-left uip-padding-xs uip-border-bottom" v-if="column.active" :class="{\'uip-hidden-small\' : !column.mobile}">\n                      <div v-if="column.name == \'username\'" class="uip-flex uip-flex-center uip-gap-xs" @click="viewUser(user.user_id)">\n                        <div class="uip-padding-xxs uip-flex uip-flex-center">\n                          <img v-if="user.image" class="uip-w-24 uip-ratio-1-1 uip-border-circle" :src="user.image" />\n                        </div>\n                        <span class="uip-text-bold">{{user[column.name]}}</span>\n                      </div>\n                      <div v-else-if="column.name == \'roles\'" class="uip-flex uip-flex-wrap uip-gap-xs uip-row-gap-xxs">\n                        <router-link :to="\'/roles/edit/\' + role" v-for="role in user.roles" \n                        class="uip-background-primary-wash uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-link-default uip-no-underline uip-text-s">\n                          {{role}}\n                        </router-link>\n                      </div>\n                      <div v-else-if="column.name == \'uip_user_group\'" class="uip-flex uip-flex-wrap uip-gap-xxs uip-row-gap-xxxs">\n                        <template v-for="group in user.uip_user_group">\n                          <div\n                            v-if="returnTableData.groups[group]"\n                            class="uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-text-s uip-text-inverse"\n                            :style="returnGroupColour(group)"\n                          >\n                            {{returnGroupTag(group)}}\n                          </div>\n                        </template>\n                      </div>\n                      <div v-else>{{user[column.name]}}</div>\n                    </td>\n                  </template>\n                  <td class="uip-border-bottom">\n                    <div class="uip-flex">\n                      <drop-down dropPos="left">\n                        <template v-slot:trigger>\n                          <div class="uip-icon uip-link-default uip-padding-xs hover:uip-background-grey uip-border-round uip-text-l">more_horiz</div>\n                        </template>\n                        <template v-slot:content>\n                          <div class="uip-flex uip-flex-column">\n                            <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-border-bottom">\n                              <div\n                                class="uip-flex uip-gap-xs uip-border-round uip-link-default uip-flex-center hover:uip-background-muted uip-padding-xxs"\n                                @click="viewUser(user.user_id)">\n                                <div class="uip-icon">person</div>\n                                <div>{{data.translations.viewUser}}</div>\n                              </div>\n                              <div\n                                class="uip-flex uip-gap-xs uip-border-round uip-link-default uip-flex-center hover:uip-background-muted uip-padding-xxs"\n                                @click="editUser(user.user_id)">\n                                <div class="uip-icon">edit</div>\n                                <div>{{data.translations.editUser}}</div>\n                              </div>\n                              <div class="uip-flex uip-gap-xs uip-border-round uip-link-default uip-flex-center hover:uip-background-muted uip-padding-xxs" @click="sendPasswordReset(user)">\n                                <div class="uip-icon">lock</div>\n                                <div>{{data.translations.sendPasswordReset}}</div>\n                              </div>\n                              <router-link :to="\'/message/\' + user.user_email" class="uip-flex uip-gap-xs uip-border-round uip-link-default uip-no-underline uip-flex-center hover:uip-background-muted uip-padding-xxs">\n                                <div class="uip-icon">mail</div>\n                                <div>{{data.translations.sendMessage}}</div>\n                              </router-link>\n                              \n                              \n                            </div>\n\n                            <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs">\n                              <div class="uip-flex uip-gap-xs uip-border-round uip-link-danger uip-flex-center hover:uip-background-muted uip-padding-xxs" @click="deleteUser(user.user_id)">\n                                <div class="uip-icon">delete</div>\n                                <div>{{data.translations.deleteUser}}</div>\n                              </div>\n                            </div>\n                          </div>\n                        </template>\n                      </drop-down>\n                    </div>\n                  </td>\n                </tr>\n              </template>\n            </tbody>\n          </table>\n          <div class="uip-padding-top-xs uip-padding-bottom-xs uip-padding-right-xs uip-flex uip-flex-between">\n            <div class="">{{returnTableData.totalFound}} {{data.translations.results}}</div>\n            <div class="uip-flex uip-gap-xs">\n              <button v-if="tablePage > 1" class="uip-button-default" @click="changePage(\'previous\')">{{data.translations.previous}}</button>\n              <button class="uip-button-default" @click="changePage(\'next\')">{{data.translations.next}}</button>\n            </div>\n          </div>\n        </div>\n        \n        '}};