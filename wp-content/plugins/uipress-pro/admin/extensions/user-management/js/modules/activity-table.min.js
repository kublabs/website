export function moduleData(){return{props:{data:Object,dataChange:Function},inject:["uipress"],data:function(){return{loading:!0,modData:this.data,tableData:{totalPages:1},tablePage:1,selectAll:!1,queryRunning:!1,sizeWarning:{dismissed:!1},tableFilters:{search:"",roles:[],status:[],dateCreated:{type:"on",date:""},action:""},tableOptions:{direction:"DESC",sortBy:"username",perPage:20},ui:{userPanelOpen:!1,messagePanelOpen:!1,activeUser:0,messageRecipient:[],newUserOpen:!1,offcanvas:{userPanelOpen:!1,messagePanelOpen:!1}}}},mounted:function(){this.getActivityData()},watch:{modData:{handler(e,t){this.dataChange(e)},deep:!0},tableFilters:{handler(e,t){this.getActivityData()},deep:!0},tableOptions:{handler(e,t){this.getActivityData()},deep:!0},selectAll:{handler(e,t){1==e?this.selectAllUsers():this.deSelectAllUsers()}}},computed:{returnTableData(){return this.tableData},totalSelected(){let e=this,t=0;for(var a in e.returnTableData.activity)e.returnTableData.activity[a].selected&&1==e.returnTableData.activity[a].selected&&(t+=1);return t},getTotalSelected(){let e=this,t=[];for(var a in e.returnTableData.activity)e.returnTableData.activity[a].selected&&1==e.returnTableData.activity[a].selected&&t.push(e.returnTableData.activity[a].id);return t},getTotalSelectedUsers(){let e=this,t=[];for(var a in e.returnTableData.activity)e.returnTableData.activity[a].selected&&1==e.returnTableData.activity[a].selected&&t.push(e.returnTableData.activity[a]);return t}},methods:{deleteMultiple(){let e=this;if(!confirm(e.data.translations.confirmUserDeleteMultipleActions))return;let t=e.getTotalSelected,a=new FormData;a.append("action","uip_delete_multiple_actions"),a.append("security",uip_ajax.security),a.append("allIDS",JSON.stringify(t)),e.uipress.callServer(uip_ajax.ajax_url,a).then(t=>{let a=t;if(a.error)e.uipress.notify(a.message,"","error");else if(e.uipress.notify(a.message,"","success"),e.deSelectAllUsers(),e.getActivityData(),a.undeleted.length>0)for(var i in a.undeleted){let t=a.undeleted[i],n=t.user+"<br>"+t.message;e.uipress.notify(n,"","error")}})},deleteAllHistory(){let e=this;if(!confirm(e.data.translations.confirmUserDeleteAllHistory))return;e.loading=!0;let t=new FormData;t.append("action","uip_delete_all_history"),t.append("security",uip_ajax.security),e.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{let a=t;if(e.loading=!1,a.error)e.uipress.notify(a.message,"","error");else if(e.uipress.notify(a.message,"","success"),e.deSelectAllUsers(),e.getActivityData(),a.undeleted.length>0)for(var i in a.undeleted){let t=a.undeleted[i],n=t.user+"<br>"+t.message;e.uipress.notify(n,"","error")}})},selectAllUsers(){let e=this;for(var t in e.returnTableData.activity)e.returnTableData.activity[t].selected=!0;e.selectAll=!0},deSelectAllUsers(){let e=this;for(var t in e.returnTableData.activity)e.returnTableData.activity[t].selected=!1;e.selectAll=!1},changePage(e){"next"==e&&(this.tablePage+=1),"previous"==e&&(this.tablePage=this.tablePage-1),this.getActivityData()},updateRoles(e){this.tableFilters.roles=e},getActivityData(){let e=this;if(e.queryRunning)return;e.loading=!0,e.queryRunning=!0;e.getTotalSelected;let t=new FormData;t.append("action","uip_get_activity_table_data"),t.append("security",uip_ajax.security),t.append("tablePage",e.tablePage),t.append("filters",JSON.stringify(e.tableFilters)),t.append("options",JSON.stringify(e.tableOptions)),e.uipress.callServer(uip_ajax.ajax_url,t).then(t=>{let a=t;if(e.queryRunning=!1,e.loading=!1,a.error)return void e.uipress.notify(a.message,"","error");let i=[];e.tableData.columns&&e.tableData.columns.length>0&&(i=e.tableData.columns),e.tableData.totalPages=a.tableData.totalPages,e.tableData.activity=a.tableData.activity,e.tableData.totalFound=a.tableData.totalFound,e.tableData.columns=a.tableData.columns,e.tableData.actions=a.tableData.actions,i.length>0&&(e.tableData.columns=i),e.tablePage>a.tableData.totalPages&&(e.tablePage=a.tableData.totalPages),e.tablePage<1&&(e.tablePage=1)})},returnActionClass:e=>"primary"==e?"uip-background-primary-wash":"warning"==e?"uip-background-orange-wash":"danger"==e?"uip-background-red-wash":"uip-background-primary-wash",openUser(e){this.ui.activeUser=e,this.ui.offcanvas.userPanelOpen=!0},openMessenger(e){this.ui.messageRecipient=e,this.ui.offcanvas.messagePanelOpen=!0}},template:'\n      <div class="uip-margin-top-m uip-text-normal">\n      \n          <div v-if="sizeWarning.dismissed != true && returnTableData.totalFound > 20000" class="uip-margin-bottom-m uip-border-round uip-background-orange-wash uip-padding-s uip-flex uip-flex-column uip-row-gap-s">\n            <div class="uip-text-emphasis uip-text-l uip-text-bold">{{data.translations.historylogLarge}}</div>\n            <div class="uip-text-muted">{{data.translations.logSizeWarning}}</div>\n            <div class="uip-flex uip-gap-s">\n              <button @click="sizeWarning.dismissed = true" class="uip-button-primary uip-text-s">{{data.translations.dismiss}}</button>\n              <button @click="deleteAllHistory()" class="uip-button-danger uip-text-s">{{data.translations.deleteAllActivity}}</button>\n            </div>\n          </div>\n          \n          \n          \n          \x3c!--Filters--\x3e\n          <div class="uip-flex uip-gap-s uip-flex-wrap uip-row-gap-s uip-margin-bottom-s">\n            \n            <div class="uip-position-relative" v-if="totalSelected > 0">\n              <drop-down dropPos="bottom-left">\n              \n                <template v-slot:trigger>\n                  <button class="uip-button-primary uip-flex uip-gap-xs uip-flex-center">\n                    <span class="uip-icon">settings</span>\n                    <span>{{totalSelected + \' \' + data.translations.actionsSelected}}</span>\n                  </button>\n                </template>\n                <template v-slot:content>\n                \n                  <div class="uip-flex uip-flex-column">\n                  \n                    <div class="uip-padding-xs uip-flex uip-flex-column uip-row-gap-xxs uip-border-bottom">\n                      \n                      <div class="uip-flex uip-gap-xs uip-border-round uip-cursor-pointer hover:uip-background-muted uip-padding-xxs uip-flex-center" @click="deSelectAllUsers()">\n                        <div class="uip-icon">backspace</div>\n                        <div>{{data.translations.clearSelection}}</div>\n                      </div>\n                      \n                    </div>\n                  \n                    \n                    <div class="uip-padding-xs">\n                      <div class="uip-flex uip-gap-xs uip-border-round uip-link-danger hover:uip-background-muted uip-padding-xxs uip-flex-center" @click="deleteMultiple()">\n                        <div class="uip-icon">delete</div>\n                        <div>{{data.translations.deleteActions}}</div>\n                      </div>\n                    </div>\n                    \n                    \n                  </div>\n                </template>\n                \n              </drop-down>\n            </div>\n            \n            <div class="hover:uip-background-muted uip-padding-xs uip-border-round  uip-flex uip-flex-center uip-gap-xs uip-flex-grow uip-position-relative">\n              <span class="uip-icon uip-text-l">search</span>\n              <input class="uip-blank-input uip-flex-grow" :placeholder="data.translations.searchHistory" v-model="tableFilters.search" />\n              \n              <div class="uip-ajax-loader uip-border-round uip-w-100p uip-bottom-0 uip-left-0" v-if="loading">\n                <div class="uip-loader-bar"></div>\n              </div>\n            </div>\n            \n                      \n            <div class="uip-w-200">\n              <activity-status-select\n                :selected="tableFilters.status"\n                :name="data.translations.filterByStatus"\n                :translations="data.translations"\n                :single="false"\n                :placeholder="data.translations.searchStatuses"\n                :updateRoles="function(d){tableFilters.status = d}"\n              ></activity-status-select>\n            </div>\n            \n            <div class="uip-w-200">\n              <role-select\n                :selected="tableFilters.roles"\n                :name="data.translations.filterByRole"\n                :translations="data.translations"\n                :single="false"\n                :placeholder="data.translations.searchRoles"\n                :updateRoles="updateRoles"\n              ></role-select>\n            </div>\n            \n            \n            <div class="uip-flex uip-gap-xxs">\n              \x3c!-- DATE FILTERS --\x3e\n              <div class="uip-position-relative">\n                <drop-down dropPos="left">\n                  <template v-slot:trigger>\n                    <div class="uip-icon uip-link-default uip-padding-xs hover:uip-background-muted uip-border-round uip-text-l">calendar_today</div>\n                  </template>\n                  <template v-slot:content>\n                    <div class="uip-padding-s uip-flex uip-flex-column uip-row-gap-s uip-flex-start">\n                      <div class="uip-text-muted uip-text-bold">{{data.translations.dateCreated}}</div>\n                      <div class="uip-flex uip-gap-xs uip-background-muted uip-border-round uip-padding-xxs">\n                        <div\n                          class="uip-padding-xxs uip-border-round uip-cursor-pointer"\n                          @click="tableFilters.dateCreated.type = \'on\'"\n                          :class="{\'uip-background-default uip-text-bold\' : tableFilters.dateCreated.type == \'on\'}"\n                        >\n                          {{data.translations.on}}\n                        </div>\n                        <div\n                          class="uip-padding-xxs uip-border-round uip-cursor-pointer"\n                          @click="tableFilters.dateCreated.type = \'after\'"\n                          :class="{\'uip-background-default uip-text-bold\' : tableFilters.dateCreated.type == \'after\'}"\n                        >\n                          {{data.translations.after}}\n                        </div>\n                        <div\n                          class="uip-padding-xxs uip-border-round uip-cursor-pointer"\n                          @click="tableFilters.dateCreated.type = \'before\'"\n                          :class="{\'uip-background-default uip-text-bold\' : tableFilters.dateCreated.type == \'before\'}"\n                        >\n                          {{data.translations.before}}\n                        </div>\n                      </div>\n                      <div>\n                        <input class="uip-input" type="date" v-model="tableFilters.dateCreated.date" />\n                      </div>\n                    </div>\n                  </template>\n                </drop-down>\n                \n                \x3c!-- DATE FILTERS NUMBER DISPLAY --\x3e\n                <span v-if="tableFilters.dateCreated.date != \'\'"\n                class="uip-text-inverse uip-background-primary uip-border-round uip-text-s uip-w-18 uip-margin-left-xxs uip-text-center uip-position-absolute uip-right--8 uip-top--8">1</span>\n              </div>\n              \n              \n              <drop-down dropPos="left">\n                <template v-slot:trigger>\n                  <div class="uip-icon uip-link-default uip-padding-xs hover:uip-background-muted uip-border-round uip-text-l">tune</div>\n                </template>\n                <template v-slot:content>\n                  <div class="uip-flex uip-flex-column">\n                    <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-padding-s uip-border-bottom">\n                      <div class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-gap-l">\n                        <div class="uip-flex uip-flex-center uip-gap-xs">\n                          <span class="uip-icon uip-text-l">swap_vert</span>\n                          <span>{{data.translations.order}}</span>\n                        </div>\n                        <div>\n                          <select v-model="tableOptions.direction" class="uip-input">\n                            <option value="ASC">{{data.translations.ascending}}</option>\n                            <option value="DESC">{{data.translations.descending}}</option>\n                          </select>\n                        </div>\n                      </div>\n              \n                      <div class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-gap-l">\n                        <div class="uip-flex uip-flex-center uip-gap-xs">\n                          <span class="uip-icon uip-text-l">sort</span>\n                          <span>{{data.translations.sortBy}}</span>\n                        </div>\n                        <div>\n                          <select v-model="tableOptions.sortBy" class="uip-input">\n                            <template v-for="column in returnTableData.columns">\n                              <option :value="column.name">{{column.label}}</option>\n                            </template>\n                          </select>\n                        </div>\n                      </div>\n              \n                      <div class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-gap-l">\n                        <div class="uip-flex uip-flex-center uip-gap-xs">\n                          <span class="uip-icon uip-text-l">format_list_numbered</span>\n                          <span>{{data.translations.perPage}}</span>\n                        </div>\n                        <div>\n                          <input type="number" min="1" max="2000" class="uip-input" v-model="tableOptions.perPage" />\n                        </div>\n                      </div>\n                    </div>\n              \n                    <div class="uip-flex uip-flex-column uip-row-gap-xxs uip-padding-s uip-border-bottom">\n                      <div class="uip-text-muted uip-text-bold uip-padding-xxs">{{data.translations.fields}}</div>\n                      <div class="">\n                        <div\n                          v-for="column in returnTableData.columns"\n                          class="uip-flex uip-flex-between uip-flex-center uip-padding-xxs uip-border-round hover:uip-background-muted uip-cursor-pointer"\n                          @click="column.active = !column.active"\n                        >\n                          <div class="">{{column.label}}</div>\n                          <input type="checkbox" class="uip-checkbox" v-model="column.active" />\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div class="uip-padding-s">\n                      <button @click="deleteAllHistory()" class="uip-button-danger">{{data.translations.deleteAllActivity}}</button>\n                    </div>\n                  </div>\n                </template>\n              </drop-down>\n            \n            </div>\n            \n          </div>\n          \x3c!--End Filters--\x3e\n          \n          \n          \n          \n          \n\t  \t    <table class="uip-w-100p uip-border-collapse uip-margin-bottom-s">\n              <thead>\n                  <tr class="uip-border-bottom">\n                      <th class="uip-text-left uip-w-28 uip-padding-xs uip-padding-bottom-s"><input type="checkbox" class="uip-checkbox" v-model="selectAll"></th>\n                      <template v-for="column in returnTableData.columns">\n                        <th class="uip-text-left uip-text-bold uip-text-muted uip-padding-xs uip-padding-bottom-s" v-if="column.active" :class="{\'uip-hidden-small\' : !column.mobile}">\n                          {{column.label}}\n                        </th>\n                      </template>\n                  </tr>\n              </thead>\n              <tbody>\n                  <template v-for="action in returnTableData.activity">\n                    <tr class="hover:uip-background-muted">\n                        <td class="uip-border-bottom uip-w-28 uip-padding-xs">\n                          <div class=" uip-flex uip-gap-xs uip-flex-center">\n                            <input class="uip-checkbox" :data-id="action.id" type="checkbox" v-model="action.selected">\n                          </div>\n                        </td>\n                        <template v-for="column in returnTableData.columns">\n                        \n                          <td class="uip-text-left uip-padding-xs uip-border-bottom" v-if="column.active" :class="{\'uip-hidden-small\' : !column.mobile}">\n                          \n                            <div v-if="column.name == \'user\'" class="uip-flex uip-flex-center uip-gap-xs uip-cursor-pointer">\n                              <img v-if="action.image" class="uip-w-28 uip-h-28 uip-border-circle" :src="action.image">\n                              <div class="uip-flex uip-flex-column uip-row-gap-xxs">\n                                <router-link :to="\'/users/\' + action.user_id" class="uip-text-bold uip-link-emphasis uip-no-underline">{{action[column.name]}}</router-link>\n                                <div class="uip-flex uip-flex-wrap uip-gap-xs uip-row-gap-xxs">\n                                  <template v-for="role in action.roles">\n                                    <router-link :to="\'/roles/edit/\' + role" class="uip-background-primary-wash uip-link-default uip-no-underline uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-text-s">\n                                      {{role}}\n                                    </router-link>\n                                  </template>\n                                </div>\n                              </div>\n                            </div>\n                            \n                            <div v-else-if="column.name == \'action\'" class="uip-flex">\n                              <div :class="returnActionClass(action.type)" class="uip-border-round uip-padding-left-xxs uip-padding-right-xxs uip-text-bold uip-flex uip-text-s uip-no-wrap">\n                                {{action[column.name]}}\n                              </div>\n                            </div>\n                            <div v-else-if="column.name == \'description\'" class="uip-max-h-80 uip-overflow-auto">\n                              <div v-html="action[column.name]"></div>\n                              <div v-if="action.links" class="uip-flex uip-gap-xs">\n                                <template v-for="link in action.links">\n                                  <a :href="link.url" class="uip-link-muted uip-link-no-underline">{{link.name}}</a>\n                                </template>\n                              </div>\n                            </div>\n                            <div v-else>{{action[column.name]}}</div>\n                          </td>\n                          \n                        </template>\n                    </tr>\n                  </template>\n              </tbody>\n          </table>\n          <div class="uip-padding-top-xs uip-padding-bottom-xs uip-padding-right-xs uip-flex uip-flex-between">\n            <div class="">{{returnTableData.totalFound}} {{data.translations.results}}</div>\n            <div class="uip-flex uip-gap-xs">\n              <button v-if="tablePage > 1" class="uip-button-default" @click="changePage(\'previous\')">{{data.translations.previous}}</button>\n              <button v-if="tablePage < tableData.totalPages" class="uip-button-default" @click="changePage(\'next\')">{{data.translations.next}}</button>\n            </div>\n          </div>\n          \n\t    </div>'}};